import{_ as c,r as e,o as i,c as l,b as s,a as t,w as u,e as a,d as n}from"./app.af27f823.js";const r={},d=a('<h1 id="discord-api-integration" tabindex="-1"><a class="header-anchor" href="#discord-api-integration" aria-hidden="true">#</a> Discord API Integration</h1><h2 id="rate-limits" tabindex="-1"><a class="header-anchor" href="#rate-limits" aria-hidden="true">#</a> Rate limits</h2><h3 id="adding-components" tabindex="-1"><a class="header-anchor" href="#adding-components" aria-hidden="true">#</a> Adding components</h3>',3),k=n("A workaround to add components (buttons, modals, etc.) is to create an application webhook (see "),v={href:"https://discord.com/developers/docs/resources/webhook#execute-webhook-jsonform-params",target:"_blank",rel:"noopener noreferrer"},m=n("the Discord documentation"),b=n("). Then this application webhook"),h=a(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// bot.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Client <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;discord.js&#39;</span>

<span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Client</span><span class="token punctuation">(</span><span class="token punctuation">{</span> intents<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> channelId <span class="token operator">=</span> <span class="token string">&#39;channel_id&#39;</span>

<span class="token comment">// For these examples the Discord.js Client will be used.</span>
client<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">&#39;ready&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// If the application webhook is already defined, return</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">WEBHOOK_URL</span><span class="token punctuation">)</span> <span class="token keyword">return</span>

    <span class="token comment">// Create a new application webhook in the channel</span>
    <span class="token keyword">const</span> channel <span class="token operator">=</span> client<span class="token punctuation">.</span>guilds<span class="token punctuation">.</span>cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;guild_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>channels<span class="token punctuation">.</span>cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>channelId<span class="token punctuation">)</span>
    <span class="token keyword">const</span> webhook <span class="token operator">=</span> <span class="token keyword">await</span> channel<span class="token punctuation">.</span><span class="token function">createWebhook</span><span class="token punctuation">(</span><span class="token string">&#39;GitHubDiscord&#39;</span><span class="token punctuation">)</span>
    
    <span class="token comment">// Store the url / id in a .env file</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>webhook<span class="token operator">?.</span>url<span class="token punctuation">,</span> webhook<span class="token operator">?.</span>id<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

client<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),g=n("After the webhook is created, "),_=n("the server can be started"),w=n(" on your platform of choice"),f=a(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// server/index.ts</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> GitHubRulesManager<span class="token punctuation">,</span> RuleBuilder <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;github-discord-events&#39;</span>

<span class="token comment">// Use the application webhook</span>
<span class="token keyword">const</span> rules <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RuleBuilder</span><span class="token punctuation">(</span><span class="token punctuation">{</span> url<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">WEBHOOK_URL</span><span class="token operator">!</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">setFilter</span><span class="token punctuation">(</span><span class="token string">&#39;transformMessage&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>event<span class="token punctuation">,</span> embeds<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            embeds<span class="token punctuation">,</span>
            components<span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token punctuation">{</span>
                    type<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
                    components<span class="token operator">:</span> <span class="token punctuation">[</span>
                        <span class="token punctuation">{</span>
                            type<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
                            style<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
                            url<span class="token operator">:</span> <span class="token string">&#39;https://github.com/org/repo/path_release_assets.zip&#39;</span><span class="token punctuation">,</span>
                            label<span class="token operator">:</span> <span class="token string">&#39;Download release&#39;</span>
                        <span class="token punctuation">}</span><span class="token punctuation">,</span>
                        <span class="token punctuation">{</span>
                            type<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
                            style<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
                            custom_id<span class="token operator">:</span> <span class="token string">&#39;release-changelog:{repo}/{tag}&#39;</span><span class="token punctuation">,</span>
                            label<span class="token operator">:</span> <span class="token string">&#39;View changelog&#39;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">]</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">setFilter</span><span class="token punctuation">(</span><span class="token string">&#39;onBeforeActivated&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>msg<span class="token punctuation">,</span> webhook<span class="token punctuation">,</span> rule<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> manager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GitHubRulesManager</span><span class="token punctuation">(</span><span class="token punctuation">{</span> rules <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;fetch&#39;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    event<span class="token punctuation">.</span><span class="token function">respondWith</span><span class="token punctuation">(</span>manager<span class="token punctuation">.</span><span class="token function">handleEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function y(x,R){const p=e("ExternalLinkIcon"),o=e("RouterLink");return i(),l("div",null,[d,s("p",null,[k,s("a",v,[m,t(p)]),b]),h,s("p",null,[g,t(o,{to:"/guide/hosted.html"},{default:u(()=>[_]),_:1}),w]),f])}var E=c(r,[["render",y],["__file","discord-api.html.vue"]]);export{E as default};
