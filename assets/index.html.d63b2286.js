import{_ as r,r as s,o as d,c as k,a,w as t,b as n,d as e,e as v}from"./app.af27f823.js";const m=n("h2",{id:"example",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#example","aria-hidden":"true"},"#"),e(" Example")],-1),h=n("p",null,"Create a message in a Discord channel when a new release is published.",-1),b=n("h3",{id:"discord",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#discord","aria-hidden":"true"},"#"),e(" Discord")],-1),g=e("releases"),_=e(" version 2.1.0 is out! "),f=n("br",null,null,-1),w=n("br",null,null,-1),x=e(" View the changelog: https://github.com/ghostrider-05/github-discord-events/blob/master/CHANGELOG.md#2.1.0. "),y=v(`<h3 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> RuleBuilder<span class="token punctuation">,</span> GitHubEventManager <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;github-discord-events&#39;</span>

<span class="token keyword">const</span> rules <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RuleBuilder</span><span class="token punctuation">(</span><span class="token punctuation">{</span> webhook<span class="token operator">:</span> <span class="token constant">WEBHOOK_URL</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">addEvent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        name<span class="token operator">:</span> <span class="token string">&#39;release&#39;</span><span class="token punctuation">,</span>
        actions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;published&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        main<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token function-variable function">addFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token operator">!</span>event<span class="token punctuation">.</span>release<span class="token punctuation">.</span>draft <span class="token comment">// Ignore draft releases</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function-variable function">transformMessage</span><span class="token operator">:</span> <span class="token punctuation">(</span>event<span class="token punctuation">,</span> embeds<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> <span class="token punctuation">{</span> tag_name <span class="token punctuation">}</span> <span class="token operator">=</span> event<span class="token punctuation">.</span>release
            <span class="token keyword">const</span> changelog <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://github.com/ghostrider-05/github-discord-events/blob/master/CHANGELOG.md#</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>tag_name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>

            <span class="token keyword">const</span> content <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;@role_id&gt; version </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>tag_name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is out!\\n\\nView the changelog: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>changelog<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token template-punctuation string">\`</span></span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                embeds<span class="token punctuation">,</span>
                content
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> manager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GitHubEventManager</span><span class="token punctuation">(</span><span class="token punctuation">{</span> rules <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;fetch&#39;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    event<span class="token punctuation">.</span><span class="token function">respondWith</span><span class="token punctuation">(</span>manager<span class="token punctuation">.</span><span class="token function">handleEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),D={name:"index.html",setup(E){const o="https://cdn.discordapp.com/avatars/858851908721967105/df91181b3f1cf0ef1592fbe18e0962d7.webp?size=100";return(M,N)=>{const p=s("DiscordEmbed"),c=s("DiscordMention"),i=s("DiscordMarkdown"),l=s("DiscordMessage"),u=s("DiscordMessages");return d(),k("div",null,[m,h,b,a(u,null,{default:t(()=>[a(l,{bot:!0,author:"GitHub",avatar:o},{embeds:t(()=>[a(p,{authorName:"ghostrider-05",embedTitle:"[ghostrider-05/github-discord-events] New release published: 2.1.0",url:"https://github.com/ghostrider-05/github-discord-events/releases/tag/2.1.0"})]),default:t(()=>[a(c,{type:"role",highlight:!0,roleColor:"#00FF00"},{default:t(()=>[g]),_:1}),_,a(i,null,{default:t(()=>[f,w,x]),_:1})]),_:1})]),_:1}),y])}}};var G=r(D,[["__file","index.html.vue"]]);export{G as default};
